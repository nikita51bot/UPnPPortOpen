plugins {
    id 'java'
    id 'maven-publish'
}

def mavenRepoUsername = System.getenv("mvn-repo-username")
def mavenRepoPassword = System.getenv("mvn-repo-token")

group = 'ru.nikita51'
version = '1.8-1.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly ("org.spigotmc:spigot-api:1.8-R0.1-SNAPSHOT") {
        exclude group: "com.google.code.gson", module: "gson"
        exclude group: "com.google.guava", module: "guava"
        exclude group: "junit", module: "junit"
        exclude group: "org.yaml", module: 'snakeyaml'
    }
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        //noinspection GroovyAssignabilityCheck
        myLib MavenPublication from components.java
    }
    repositories {
        maven {
            name = "whitebeef-repository"
            url = "https://mvn.whitebeef.ru/releases"
            credentials {
                username = mavenRepoUsername
                password = mavenRepoPassword
            }
        }
    }
}